// <auto-generated />
using Luckys_Cars.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Luckys_Cars.Migrations
{
    [DbContext(typeof(LuckysDbContext))]
    partial class LuckysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Cars_ModelCart_Model", b =>
                {
                    b.Property<int>("Cart_ModelCartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemsItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Cart_ModelCartId", "ItemsItemId");

                    b.HasIndex("ItemsItemId");

                    b.ToTable("Cars_ModelCart_Model");
                });

            modelBuilder.Entity("Luckys_Cars.Models.CarPhotos_Model", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageId");

                    b.HasIndex("ItemId");

                    b.ToTable("CarPhotos");
                });

            modelBuilder.Entity("Luckys_Cars.Models.Cars_Model", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Engine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IntColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Miles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SaleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("SaleId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Cost = 1750000,
                            Engine = "5.0L V8 412hp",
                            ExtColor = "Red",
                            Features = "Steering Wheel Audio Controls, Satellite and Bluetooth Radio, Keyless Entry, Traction Control, Rear Spoiler",
                            IntColor = "Black",
                            Make = "Ford",
                            Miles = 95151,
                            Model = "Mustang GT Premium",
                            Transmission = "Manual 6 Speed",
                            Year = 2012
                        },
                        new
                        {
                            ItemId = 2,
                            Cost = 1899999,
                            Engine = "1.5L Turbo I4 192 hp",
                            ExtColor = "Black",
                            Features = "Bluetooth Radio, Automatic Climate Control",
                            IntColor = "Black",
                            Make = "Honda",
                            Miles = 10898,
                            Model = "Accord Sport",
                            Transmission = "CVT",
                            Year = 2022
                        },
                        new
                        {
                            ItemId = 3,
                            Cost = 3199500,
                            Engine = "3.5L V6",
                            ExtColor = "White",
                            Features = "Audio Controls on Steering Wheel, Bluetooth Radio, Climate Control, Heated Mirrors",
                            IntColor = "Cement",
                            Make = "Toyota",
                            Miles = 28214,
                            Model = "Tacoma",
                            Transmission = "Automatic 6 Speed",
                            Year = 2021
                        },
                        new
                        {
                            ItemId = 4,
                            Cost = 899500,
                            Engine = "3.5L V6",
                            ExtColor = "Red",
                            Features = "Moonroof, Bluetooth Audio, Audio Controls on Steering Wheel",
                            IntColor = "Black",
                            Make = "Mercedes-Benz",
                            Miles = 94400,
                            Model = "C-Class C 300 Sport",
                            Transmission = "Automatic 7 Speed",
                            Year = 2013
                        });
                });

            modelBuilder.Entity("Luckys_Cars.Models.Cart_Model", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Luckys_Cars.Models.Sale_Model", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shipping")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SaleId");

                    b.HasIndex("UserId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Luckys_Cars.Models.User_Model", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "wlane12@students.kennesaw.edu",
                            IsAdmin = 1,
                            Name = "Developer",
                            Password = "SillyHill795",
                            Username = "Developer_Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "JAdkiss1@kennesaw.edu",
                            IsAdmin = 1,
                            Name = "Jeff Adkisson",
                            Password = "SecretPassword3313",
                            Username = "JAdkiss1"
                        });
                });

            modelBuilder.Entity("Cars_ModelCart_Model", b =>
                {
                    b.HasOne("Luckys_Cars.Models.Cart_Model", null)
                        .WithMany()
                        .HasForeignKey("Cart_ModelCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luckys_Cars.Models.Cars_Model", null)
                        .WithMany()
                        .HasForeignKey("ItemsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luckys_Cars.Models.CarPhotos_Model", b =>
                {
                    b.HasOne("Luckys_Cars.Models.Cars_Model", "Car")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Luckys_Cars.Models.Cars_Model", b =>
                {
                    b.HasOne("Luckys_Cars.Models.Sale_Model", "Sale")
                        .WithMany("Items")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Luckys_Cars.Models.Cart_Model", b =>
                {
                    b.HasOne("Luckys_Cars.Models.User_Model", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Luckys_Cars.Models.Sale_Model", b =>
                {
                    b.HasOne("Luckys_Cars.Models.User_Model", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Luckys_Cars.Models.Sale_Model", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
