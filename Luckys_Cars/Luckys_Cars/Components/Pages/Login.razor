    @page "/"
    @using Microsoft.EntityFrameworkCore.Metadata.Internal
    @layout NoNavMenuLayout
    @rendermode InteractiveServer
    @inject NavigationManager Navigation
    @inject DataService DataService
    @inject Authenticator AuthProvider

    <PageTitle>Login</PageTitle>


    <!-- This centers the login box-->
    <div class="d-flex align-items-center vh-100 flex-column gap-4">
        <!-- Panther Logo-->
        <div class="text-center">
            <img src="images/Raster.png" class="img-fluid" style="width: 25%" alt="Panther Logo">
        </div>
        <h1 style="font-size: 5rem; font-family: Norwester, Arial, sans-serif;">Lucky's Cars</h1>
        <h1>Login</h1>
        
        <!-- Error Message -->
        @if (!string.IsNullOrWhiteSpace(loginError))
        {
            <div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
                <div class="alert alert-danger text-center" role="alert">
                    @loginError
                </div>
            </div>
        }
        <!-- User Id input -->
        <div class="form-group wh-login">
            <input type="text" class="form-control login-text-inp-size" id="loginInput"
                   @bind="userIdInput" placeholder="Email or Username"/>
        </div>
        
        <div class="form-group wh-login">
            <input type="password" class="form-control login-text-inp-size" id="passwordInput"
                   @bind="userPassword" placeholder="Password"/>
        </div>
        
        <!--Buttons-->
        <button class="btn btn-primary wh-login" @onclick="AttemptLogin" type="button" >Login</button>
        <NavLink class="btn btn-primary wh-login" type="button" href="/SignUp">Sign Up</NavLink>
    </div>


    @code {
        private string userIdInput = string.Empty;
        private string userPassword = string.Empty;
        private string? loginError;

        private bool isLoading = false; // Optional loading indicator

        private async Task AttemptLogin()
        {
            isLoading = true;
            loginError = null;

            try
            {
                var users = await DataService.GetUsers();

                var loginAttempt = users.FirstOrDefault(u =>
                    (u.Username.Equals(userIdInput.Trim(), StringComparison.OrdinalIgnoreCase)
                     || u.Email.Equals(userIdInput.Trim(), StringComparison.OrdinalIgnoreCase))
                    && u.Password == userPassword);

                if (loginAttempt != null)
                {
                    await AuthProvider.SignInAsync(loginAttempt);
                    Navigation.NavigateTo("/Inventory", forceLoad: true);
                }
                else
                {
                    loginError = "Incorrect username or password.";
                }
            }
            catch (Exception ex)
            {
                loginError = "An error occurred while trying to login.";
                Console.WriteLine($"Login error: {ex.Message}");
            }
            finally
            {
                isLoading = false;
            }
        }
    }
