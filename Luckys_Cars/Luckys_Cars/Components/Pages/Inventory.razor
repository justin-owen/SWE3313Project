@page "/Inventory"
@using Luckys_Cars.Data
@using Luckys_Cars.Models
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]
@layout MainLayout
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject DataService DataService
@inject HttpClient Http
<div class="bg-secondary w-100 border border-top-0 bg-body" style="position: fixed; top: 5vh; height: 10vh"></div>
<div class="h-100 bg-white ">
        <div style=";margin-bottom:10vh;margin-top:15vh;display: grid; 
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 2rem; 
        padding-inline: 12vh; padding-block: 5vh">
            @if (Cars?.Any() == true)
            {
                @foreach (var car in Cars)
                {
                    <button class="grow-on-hover bg-primary rounded border w-100 d-flex 
                            flex-column justify-content-center gap-2" 
                            style=" padding: 12px; height: 400px; color:white" 
                            @onclick="() => NavigateToCarDetail(car.ItemId)">
                        @{
                            PrimaryPhotos.TryGetValue(car.ItemId, out var photo);
                            var imageSrc = photo != null
                                ? $"data:image/png;base64,{Convert.ToBase64String(photo.ImageData)}"
                                : "/images/no-image.png"; // If somehow null, fallback to static placeholder
                        }

                        <img src="@imageSrc"
                             alt="Car Photo"
                             class="border"
                             style="width: 100%; height: 180px; object-fit: cover; border-radius: 8px;"
                             onerror="this.onerror=null;this.src='/images/no-image.png';" />
                        <div class="border bg-grey rounded " style=" padding: 12px; height: 180px">
                            <h5>@car.Make @car.Model</h5>
                            <p>Price: @((car.Cost / 100.0m).ToString("C"))</p>
                            <p>@car.Features</p>
                        </div>
                    </button>    
                }
            }
        </div>
</div>

@code {
    private List<Cars_Model> Cars = new();
    private Dictionary<int, CarPhotos_Model?> PrimaryPhotos = new();

    protected override async Task OnInitializedAsync()
    {
        Cars = await DataService.GetCars();

        foreach (var car in Cars)
        {
            var photo = await DataService.GetPrimaryPhoto(car.ItemId);
            PrimaryPhotos[car.ItemId] = photo;
        }
    }
    
    private void NavigateToCarDetail(int itemId)
    {
        Navigation.NavigateTo($"/Inventory/Item/{itemId}");
    }
}